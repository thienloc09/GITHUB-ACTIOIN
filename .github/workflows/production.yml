name: Production Pipeline
run-name: ${{ github.actor }} is running pipeline on ${{ github.repository }}
on:
  pull_request:
    types: [closed]
    branches:
      - main
    paths:
      - "force-app/**"
jobs:
  build:
    runs-on: ubuntu-latest
    environment: Devorg ttloc
    steps:
      # Checkout the Source code from the latest commit
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      # Install NPM using npm command
      - name: Install NPM
        run: |
          npm install
      # Install the SFDX CLI using npm command
      - name: Install the SFDX CLI
        run: |
          npm install @salesforce/cli --global
          sf --help
      # Install sfdx-git-delta plugin
      - name: Install the sfdx-git-delta plugin
        run: |
          echo 'y' | sf plugins install sfdx-git-delta
      # Decrypt file server key for authen
      - name: Decrypt the server.key.enc file & store inside assets folder
        run: |
          openssl enc -nosalt -aes-256-cbc -d -in ${{ secrets.ENCRYPTION_KEY_FILE }} -out ${{ secrets.JWT_KEY_FILE }} -base64 -K ${{ secrets.DECRYPTION_KEY }} -iv ${{ secrets.DECRYPTION_IV }}
      # Authenticate Salesforce org
      - name: Authenticate Salesforce ORG
        run: |
          sf org login jwt -i ${{ secrets.HUB_CONSUMER_KEY }} -f ${{ secrets.JWT_KEY_FILE }} --username ${{ secrets.HUB_USER_NAME }} -d -a DevOrg -r ${{ secrets.HUB_LOGIN_URL }}
      # Generate the package.xml file
      - name: Generate the package.xml for delta files
        run: |
          mkdir delta
          sf sgd source delta --to "HEAD" --from "HEAD~1" --output "./delta" --ignore-whitespace -d -i .sgdignore
          echo "--- package.xml generated with added and modified metadata ---"
          cat delta/package/package.xml
      # Install SFDX CLI Scanner
      - name: Install the SFDX CLI Scanner
        run: |
          echo 'y' | sf plugins install @salesforce/sfdx-scanner
      # Run SFDX CLI Scanner
      - name: Run SFDX CLI Scanner
        run: |
          mkdir reports
          sf scanner run -f html -t "force-app" -e "eslint,retire-js,pmd,cpd" -c "Design,Best Practices,Code Style,Performance,Security" --outfile ./reports/scan-reports.html
      - uses: actions/upload-artifact@v3
        with:
          name: cli-scan-report
          path: reports/scan-reports.html
      # Validate components to Salesforce
      - name: Validate components to Salesforce
        run: |
          sf project deploy validate -x delta/package/package.xml -l RunLocalTests -o DevOrg --coverage-formatters clover
      # Deploy Delta components to Salesofrce
      - name: Deploy Delta components to Salesofrce
        run: |
          sf project deploy start -x delta/package/package.xml -c -l RunLocalTests -o DevOrg
